/**
 * 
 */
package com.string.naive;

import java.io.BufferedReader;
import java.io.FileReader;

import maps.Util.FileProcessing;

/**
 * @author 		Manjusri Ishwara
 * @date		Jan 26, 2014 - 8:01:23 PM
 * @type        Check
 *
 */
public class Check {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		FileProcessing fp = null;
		BufferedReader BR = null;
		String temp = "";
		
		
		//====================== NAIVE STRING MATCH FOR SUBSEQUENCES TO RETREIVE INDEX===========================
		
		fp = new FileProcessing("E:\\workspace\\GSOM\\Sequence Modeling\\data\\mtDNA\\harbor seal - X63726.txt", 1); 
		String s1 = fp.readFileLine(); 
	
		fp = new FileProcessing("E:\\workspace\\GSOM\\Sequence Modeling\\data\\mtDNA\\gray seal - X72004.txt", 1); 
		String s2 = fp.readFileLine(); 
		
		fp = new FileProcessing("E:\\workspace\\GSOM\\Sequence Modeling\\data\\mtDNA\\cat - U20753.txt", 1); 
		String s3 = fp.readFileLine(); 
	
		fp = new FileProcessing("E:\\workspace\\GSOM\\Sequence Modeling\\data\\mtDNA\\indian rhinoceros - X97336.txt", 1); 
		String s4 = fp.readFileLine(); 
		
		fp = new FileProcessing("E:\\workspace\\GSOM\\Sequence Modeling\\data\\mtDNA\\horse - X79547.txt", 1); 
		String s5 = fp.readFileLine(); 
		
		//String p = "ACT";
		
/*			NaiveStringMatching nv = null; 
		
				System.out.println("++++++++++++++++++++++++++++++++++" + p +  "++++++++++++++++++++++++++++++++++++++");
				System.out.println("========= X63726 ==========");
				nv = new NaiveStringMatching(s1, p);
				nv.count();
				
				System.out.println("========= X72004 ==========");
				nv = new NaiveStringMatching(s2, p);
				nv.count();
				
				System.out.println("========= U20753 ==========");
				nv = new NaiveStringMatching(s3, p);
				nv.count();*/
		
		
		//====================== SET OF LINKS FOR SOLIDIFICATION ===================================================
/*		try
		{
			FileReader file = new FileReader("C:\\Users\\User\\Desktop\\2.txt");
			BR = new BufferedReader(file);
			String strLine = null;

			while((strLine = BR.readLine()) != null)
			{
				temp += strLine+"\n";
			}
		}
		catch(Exception e)
		{
			
		}
		
		System.out.println("HERE");
		
		String g[] = {"TG","GA","TC","AG","GC","GT","GG","TT","CG"}; //"CC", "AC", "TA", "AA", "AT", "CA", "CT"
		
		FilterSolid ft = new FilterSolid(g, temp);
		
		ft.process();*/


		String[] longSequence_1 = {"AC", "TA", "AA", "AT", "CA",
				"TAA", "CAA", "AAC", "CAC", "CACA", "CACAA", "TAAC", "TAC", "TAACA",
				"TAACAA", "CACAC", "CACACA", "CACACAC", "AACA", "TACA", "AACAA", "TACAC", "AACAAC", "AAT",
				"AATA", "CAT", "CATA", "CATAA", "CATAAT", "CAAC", "TAAT", "AATAT", "AATATA", "AATATAA",
				"AATATAAT", "AACAT", "AACATA", "AACATAA", "AATAA", "CAAT", "CAACA", "CAACAA", "CAACAAT",
				"CAACAT", "CAACATA", "CAACATAA", "CAACATAAT", "CAACATAATA", "CAACATAATAC", "TAT", "TATA",
				"AACAAT", "TATAA", "TATAAC", "TAACAAC", "TAACAACA", "TAACAACAA", "TAATA", "TAATAC", "TAATACA",
				"TAATACAC", "AACAC", "AACACA", "AACACAA", "AATAAT", "AATAATA", "AATAATAA", "TATAAT", "TAATAT",
				"CAATA", "CAATAT", "AATAC", "TATAT", "AATACA", "AATACAC", "AACATAC", "TACAA", "TACAAT", "TACAATA",
				"TACAATAA", "TACAATAAC", "CACAT", "CACAAC", "AACAACA", "AACAACAT", "AACAACATA", "AACAACATAA", "TACAT",
				"TAATAA", "TAATAAT", "AATAAC", "AATAACA", "AATAACAT", "AATAACATA", "AATAACATAA", "CAATAA", "CAATAAT",
				"CATAC", "TACACA", "AATAACAA", "AATAACAAT", "AACACAC", "AATACAT", "AATACATA", "AATACATAC", "TAATAATA",
				"TAATAATAA", "TAATAATAAC", "TAATAATAACA", "TAACAAT", "AACAATA", "AACAATAT", "AACAATATA", "AATATAC",
				"AACACAT", "TATAC", "AATACAA", "AATACAAC", "AATACAACA", "AATACAACAT", "AATATAAC", "AATATAACA",
				"AATATAACAA", "AACAACAA", "AATAATAC", "AACACAAT", "AACACAATA", "AACACAATAT", "AACACAATATA", "AACACAATATAT",
				"AACATACA"};
		
		System.out.println("========= X63726 ==========\t" + longSequence_1.length + "\tS1\t" + s1.length());
		
		
		String[] longSequence_2 = {"AC", "TA", "AA", "AT", "CA",
				"TAC", "TACA", "TACAC", "TACACA", "TACACAC", "TACACACA", "TACACACAC", "ACA", "ACAC",
				"ACACA", "ACACAC", "ACACACA", "CAC", "CACA", "CACAC", "CAA", "TAA", "TAAC", "TAACA", "TAACAA", "AAC",
				"AACA", "AACAA", "AACAAC", "TACAA", "TACAAC", "AACAC", "AACACA", "AACACAA", "CAAC", "CAACA", "CAACAC",
				"CAACACA", "CACAA", "CACAAC", "AACAACA", "TACAACA", "AAT", "AACACAC", "TAAT", "TACAT", "TAT", "AATA",
				"AATAC", "TATA", "TATAA", "TATAAT", "AACAT", "AACATA", "AATACA", "AATACAT", "AATACATA", "AATACATAC",
				"TATAT", "TAATA", "TAATAA", "TAATAAT", "TAATAATA", "TAATAATAA", "TAATAATAAC", "TAATAATAACA", "TAACAAT",
				"AATAA", "AATAAT", "AATAATA", "AATAATAT", "AATAATATA", "AATAT", "AATATA", "AATATAC", "AACACAT", "AATAAC",
				"AACAACAA", "AATAATAC", "AACACAAT", "AACACAATA", "AACACAATAT", "AACACAATATA", "AACACAATATAT", "AACATAA",
				"AACATAT", "AACATATA", "AATAACA", "AATAACAA", "AACAAT", "AATACAC", "AACAACAT", "AACAACATA", "AACAACATAA",
				"AATAATATAA", "AATAACAAT"};
		
		System.out.println("========= X72004 ==========\t" + longSequence_2.length+ "\tS2\t" + s2.length());
				
		String[] longSequence_3 = {"AC", "TA", "AA", "AT", "CA",
				"AAC", "AAT", "ATA", "ATAA", "ATAAT", "ATAATA", "ATAATAA", "ATAATAAT", "ATAATAATA", 
				"ATAATAATAA", "ATAT", "TAC", "AATA", "TAA", "TAAT", "TAAC", "ATAC", "AATAC", "ATAATAT", "AATAT", "ACA",
				"CAC", "TAT", "CAT", "CACA", "CAA", "AACA", "AACAT", "AACATA", "AACATAA", "AATAA", "CAAC", "AATACA", 
				"AATACAA", "AATACAAC", "CAAT", "CATA", "CATAA", "CATAAT", "CATAATA", "CATAATAA", "CATAATAAC", "CATAATAACA",
				"CATAATAACAA", "CATAATAACAAC", "AACAC", "AACACA", "AACACAA", "AACACAAC", "TACA", "CATAC", "CACAA", "AACAA",
				"AACAAC", "AACAACA", "TATA", "TATAA", "AATAAC", "TAATA", "TAATAT", "TACAC", "AACAACAT", "TATAC", "AACAAT",
				"TACAA", "TACAAT", "TACAATA", "TACAAC", "AACACAT", "TATAAC", "TAATAC", "AATACAT", "AATACATA", "AATACATAT",
				"AACATAAC", "AATACAC", "AATACACA", "AATACACAC", "AATACACACA", "AATACACACAC", "AATATA", "AATAAT", "AATAATA",
				"AATAATAC", "AATATAA", "AATATAAC", "AATATAACA", "AATATAACAA", "AATACAAT", "AACACAC", "AACACACA",
				"AACACACAA", "AACACACAAT", "AATATAT", "AACATAT", "AACATATA", "AACATATAA", "AATATAC"};
		
		System.out.println("========= U20753 ==========\t" + longSequence_3.length + "\tS3\t" + s3.length());
		
		String[] longSequence_4 = {"AC", "TA", "AA", "AT", "CA", "CC",
				"ACC", "AAT", "AAC", "AACC", "TAC", "TACC", "TAT", "TAA", "TAAT", "TAATA", "TAATAA",
				"TAATAAT", "TAAC", "TAACC", "ATA", "ATAC", "AATA", "AATAT", "AATATA", "AATATAC", "ATAA", "ATAAT", "AATAA",
				"AATAAC", "AATAC", "ATAT", "AATAAT", "AATAATA", "AATAATAT", "ATAATA", "ATAATAA", "ATAATAAC", "AACA",
				"AACAT", "CCA", "CCAA", "CCAAC", "ACA", "ACAA", "ACAAC", "ACAACA", "ACAACAC", "ACAACACC", "CCAC", "CCACC",
				"CCACCA", "CCACCAA", "CAT", "CATA", "CATAT", "CAC", "CACA", "CACAT", "CATAA", "CATAAT", "CCAACA",
				"CCAACAC", "CCAACACC", "CCACA", "CCACCAC", "CCACCACA", "CAA", "CAAT", "AACATA", "AACATAT", "AACATATA",
				"AACATATAC", "CCAAT", "CCAATA", "AACAA", "AACAAC", "AACCA", "AACCAA", "CCAT", "AACAACA", "AACAACAT",
				"AACAACATA", "AACAACATAA", "AACAACATAAT", "AATACC", "AACAC", "AACACC", "AACACCA", "AACACCAT", "CCAACAA",
				"CCAACAAT", "AACCAT", "CCATA", "CCATAT", "CCACAA", "CCACAAT", "CCACAATA", "CCACAATAA", "CCACAATAAT",
				"CCACAATAATA", "CCACAATAATAT", "CCACAC", "CCACACC", "CCACACCA", "AATAACA", "AATAACAA", "AACAAT",
				"AACAATA", "AACAATAC", "AACAATACC", "CCAACC", "AATAACC", "CCAACAAC", "CCAACAACC", "CCAACAACCA",
				"CCAACAACCAC", "CCAACAACCACC", "AATAACCA", "AATAACCAT", "AATAACCATA", "AATAACCATAC", "AATAACCATACC",
				"AACAACC", "AACAACCA", "AACAACCAA", "CCATAA", "CCATAAC", "AACCAC", "AACCACC", "AACACA", "AACACAA",
				"AACACAAC", "AACACAACC", "AACATATAT", "AACATATATA", "AACATATATAA", "AACCAAC", "AACCAACA", "AACCAACAT",
				"AACCAACAA", "AATACA", "AATACAA", "AATACAAT", "AATACAATA", "AATACAATAC", "AACCACA", "AACCACAA",
				"AACACAT", "AACACATA", "AACCACAAC", "AACCACAACA", "AACCACAACAC", "AACCACAACACA", "AACCACAACACAA",
				"AACCACAACACAAC", "AACCACAACACAACA", "AACCACAACACAACAT", "AACCACAACACAACATA", "AACCACAACACAACATAT",
				"AACACAAT", "CCAACACA", "AACATAA", "AACCAAT", "AACCAATA", "AACCAACC", "CCATAC", "CCATACC", "CCACAT",
				"CCACATA", "CCACACA", "CCACACAT", "AATAATATA", "AATAATATAA", "AACCACCA", "AACACCAC", "AACACCACC",
				"CCACCACAT", "CCACCACATA", "CCACCACATAT", "CCACAAC", "CCACAACA", "CCACAACAT", "AATACCA", "AATACCAT",
				"AACCATA", "CCAACAATA", "CCAACAATAA", "CCAACAATAAT", "CCAACAATAATA", "CCATAAT", "CCATAATA", "CCATAATAA",
				"CCATAATAAC", "CCATAATAACA", "CCATAATAACAA", "CCAATAC"};
		
		System.out.println("========= X97336 ==========\t" + longSequence_4.length + "\tS4\t" + s4.length());
		
		String[] longSequence_5 = {"AC", "TA", "AA", "AT", "CA", "CC", "CT",
				"CAA", "AAC", "AACA", "ACA", "ACAC", "CAAC", "CAACA", "CAACAC", "CAACACT", "ACT", "AACT",
				"CAC", "CACT", "ACAA", "ACAAC", "ACAACA", "ACAACAC", "CACA", "CACAC", "CACACA", "CACAA", "CAACT", "ACACT",
				"AACAC", "AACACA", "CACAAC", "CACAACT", "AACAA", "AACAAC", "AACAACT", "AACACT", "CACACT", "TAC", "TACT",
				"TACA", "ACTA", "TAA", "CAACACTA", "CAACACTAC", "CAACACTACA", "CAACACTACAA", "CAACACTACAAC", "CTA", "CTAA",
				"CAACAA", "CACTA", "CACTAA", "ACTAC", "ACTACT", "CTAC", "CTACA", "CTAAC", "AACTA", "AACTAA", "CAACACTAA",
				"CTACT", "CTACAC", "CTACACA", "CTACACAC", "CTACACACT", "CTACACACTA", "CTACACACTAA", "CTAACA", "CACTAC",
				"CTACTA", "CTACTAA", "TACTA", "TACTAC", "TACAA", "TACAAC", "TACAACA", "TACAACAA", "TACTAA", "TAAC",
				"TAACT", "TAACTA", "TACAC", "TACACA", "TACACAC", "TACACACA", "TACACACAC", "CTACTAC", "CTACTACT", "TAACA",
				"TAACAA", "AACACTA", "CTACAA", "CTAACAA", "CTAACAAC", "CAACACC", "CCT", "TAACC", "CCA", "ACC", "ACCT",
				"CCAA", "CCAAC", "CCAACC", "CCAACCT", "TACC", "TACCA", "TACCAA", "TACCAAC", "TACCAACC", "TACCAACCT", 
				"CCTA", "CCTAC", "CCTACA", "CCTACAC", "CCTACACC", "CCTACACCA", "CCTACT", "AACAACA", "AACAACAA", "CCAACT",
				"CCAACTA", "TAACCA", "CCTACC", "CCTACCT", "CCTACCTA", "CCTAA", "AACC", "CCAACA", "CCAACAC", "CCAACACA",
				"TACACC", "TACACCA", "TACACCAA", "TACACCAAC", "CCTACTA", "CCTACTAA", "CCAC", "CCACA", "CAACC", "CCACAA",
				"CCACAAC", "CCACAACC", "TACCT", "TACCTA", "TACCTAC", "TACCTACT", "TACACT", "TACACTA", "TACTACC", "CCAACAA",
				"CCACC", "CTAACC", "CTAACCT", "CTAACCTA", "AACCT", "TACTACT", "TAACCT", "CCACAC", "CCACACC", "CCACACCA",
				"CCACACCAC", "CCACACCACT", "CCACACCACTA", "CCACACCACTAA", "AACACTAC", "AACACTACC", "CCACT", "AACCA",
				"AACCAA", "AACCAAC", "AACCAACA", "ACACC", "TAACCAA", "AACAACC", "AACAACCA", "AACAACCAA", "AACAACCAAC",
				"AACAACCAACA", "AACACC", "AACACCA", "TACCAC", "TACCACA", "TACCACAA", "TACCACAAC", "TACCACAACC",
				"TACCACAACCT", "TACCACAACCTA", "TACCACAACCTAC", "TACCACAACCTACC", "AACTAAC", "AACTAACA", "AACTAACAA",
				"AACTAACAAC", "AACTAACAACA", "AACTAACAACAA", "TAACAC", "TAACACT", "AACACAA", "ACCA", "ACCAA", "AACACCAA",
				"CCACTA", "CCACTAA", "ACCTA", "ACCTAC", "ACCTACC", "ACCTACCA", "TACACTAC", "TACACTACA", "TACACTACAC", 
				"TACACTACACA", "ACAACT", "TAACTAC", "CTACC", "CTACCT", "ACAACTA", "ACAACTAC", "ACAACTACA", "ACAACTACAC",
				"ACAACTACACC", "ACACTA", "ACACTAA", "ACACTAAC", "ACACTAACA", "TACCACT", "CACC", "CACCA", "ACAACAA",
				"TAACACC", "TAACACCA", "CCACCT", "CCAACTAC", "ACTAA", "CAACCA", "CACCT", "CACCTA", "CACCTAC", "CACCTACC",
				"CCAACCA", "TACCAACA", "CACACTA", "TAACACCT", "ACACA", "CTACAAC", "CTACAACC", "CTACAACCA", "CTACAACCAA",
				"ACTACA", "ACTACAC", "CCACCA", "CACACAC", "CACACACC", "TACCTAA", "CTACCTA", "AACCAACT", "AACTAC", 
				"AACTACT", "AACTAACT", "AACAACAC", "AACAACACA", "AACAACACAC", "AACAACACACA", "AACAACACACAA", "AACAACCT",
				"ACTAAC", "ACTAACC", "ACTAACCA", "TAAT", "AACCAT", "ATA", "ATAA", "ATAAC", "ATAACA", "CAAT", "ACAAT",
				"ACAT", "CTAT", "AACTAAT", "AACTAATA", "ACATA", "ACATAA", "ACATAAT", "AAT", "CAT", "CATA", "CATAA", 
				"CCTAAC", "CCTAACA", "CCTAACAA", "CCTAACAAC", "CCTAACAACA", "CCTAACAACAT", "CCAAT", "CTATA", "CTATAT", 
				"CCAACAT", "CCTAT", "CCTACTAC", "CCTACTACA", "CCTACTACAA", "CCTACTACAAC", "CCTACTACAACC", "CCTACTACAACCT",
				"CCTACTACAACCTA", "CCTACTACAACCTAT", "AACTAT", "CCACTAC", "CCACTACA", "CCACTACAA", "CCACTACAAC",
				"CCACTACAACC", "CCACTACAACCA", "CCACTACAACCAC", "CCACTACAACCACT", "CCACTACAACCACTA", "CCACTACAACCACTAA",
				"CCACTACAACCACTAAC", "CCACTACAACCACTAACA", "CCACTACAACCACTAACAT", "CACCAA", "CACCAAT", "CCTAACC", "CCAT",
				"CCATA", "CCATAC", "CCATACC", "CCATACCA", "CCATACCAT", "CCATACCATA", "CCATACCATAC", "CCATACCATACC",
				"CCACTAAT", "AACCTA", "AATA", "AATAC", "CCTAAT", "AATACC", "AATACCT", "CCATAA", "CCATAAT", "AACCAACC",
				"ACCTAA", "ACCTAAC", "ACCTAACA", "AACAT", "ATAT", "ACCAAC", "ACCAACT", "CATAT", "CCACCAC", "CCACCACA",
				"CCACCACAA", "AACATA", "AATAT", "AACTACA", "AATAA", "AACTATA", "AACTATAA", "AACTATAAT", "ACTAAT", "ACTAATA",
				"ACTAATAA", "ACTAATAAT", "AACCATA", "AACAAT", "CCAATA", "CCAATAT", "CATAC", "CATACT", "CATATA", "AATAAC",
				"AATAACA", "CCAACACT", "CCAACACTA", "CCAACACTAA", "CCAACACTAAC", "CCAACACTAACA", "CCAACACTAACAA",
				"CCAACACTAACAAT", "CCAACACTAACAATA", "CCAACACTAACAATAC", "CCAACACTAACAATACT", "CCAACACTAACAATACTA",
				"CCAACACTAACAATACTAA", "AACATAT", "CCACACA", "CCACACAT", "CCACTAT", "AATAAT", "CCACACT", "CCACACTA",
				"CCACACTAA", "CCACACTAAT", "CCACACTAATA", "CACTACT", "ACTAACCT", "ACTAACCTA", "ACTAACCTAT", "ACCAT",
				"ACCATA", "ACCATAT", "AACAACAT", "AACAACATA", "AACAACATAA", "CCATACT", "CCATACTA", "CCATACTAT", "CATACTA",
				"CATACTAA", "CTACCA", "CTACCAT", "ACTAT", "ATAAT", "ATATA", "AACCAC", "AACCACC", "AACCACCA", "AACACTACT",
				"CTACAT", "CTATAA", "CTATAAT", "CTATAATA", "CTATAATAT", "ACACAC", "CTACCATA", "CTACCATAA", "CTACCATAAT",
				"CTATAC", "CTATACT", "CTAACT", "ATAC", "ATACT", "CACAT", "ATACA", "ATACAC", "ATACACA", "ATACACAC",
				"ATACACACT", "AATATA", "AATATAA", "AATATAAC", "AATATAACC", "AATATAACCT", "CCACAACA", "CCACAACAT",
				"CATATAC", "CATATACA", "CATATACAA", "CATATACAAC", "CATATACAACA", "CATATACAACAT", "AATACCA", "AATACCAT",
				"ATACTA", "ATACTAA", "ATACTAAT", "ATACTAATA", "ATACTAATAA", "ATACTAATAAT", "CCACCAT", "CCACCATA",
				"CCACCATAC", "CCACCATACC", "CCACCATACCA", "CCACCATACCAC", "CCACCATACCACA", "CCACCATACCACAC", 
				"CCACCATACCACACA", "CCACCATACCACACAT", "CCACCTA", "CCACCTAC", "AACCTAA", "CCTATA", "CCTATAT", "CCTATATA",
				"CCTATATAC", "CCTATATACC", "CCTATATACCT", "CAACAT", "ACCAC", "ACCACA", "ACCACAC", "ACCACACA",
				"ACCACACAC", "ACCACACACT", "ACCACACACTA", "ACCACACACTAA", "ACCACACACTAAT", "ACCACACACTAATA",
				"ACCACACACTAATAA", "ACCACACACTAATAAT", "CACCAT", "CACCATA", "AACAATA", "CCACCAA", "CCACCAAT", "CCACAT",
				"AATAACC", "AATAACCA", "AATAACCAT", "CTAAT", "AACCACA", "ATACAT", "ACACACC", "ACAACC", "ACAACCA",
				"ACAACCAA", "AATAACAA", "CCAACAAT", "CCAACAATA", "AATAATA", "CCTACTACC", "CCTACTACCT", "CTAACAT", 
				"ACACCT", "ACAACACC", "ACAACACCT", "ACAACACCTA", "ACAACACCTAA", "ACAACACCTAAT", "ACCACT", "ATAACAT", 
				"CATAAT", "ACCACC", "CCTAATA", "AATACT", "AATACTA", "AATACTAT", "CCAACTAA", "CCACCACT", "AATAATAA", 
				"ACTACC", "ACTACCA", "ACTACCAC", "ACTACCACA", "ACTACCACAA", "ACTACCACAAC", "ACTACCACAACT", "ACTACCACAACTA",
				"ACTACCACAACTAA", "CCATAT", "AACAACTA", "AACAACTAA", "AACAACTAAC", "AACAACTAACC", "AACAACTAACCT",
				"AACAACTAACCTA", "AACAACTAACCTAA", "AACACTAT", "AACACTATA", "AACACTATAC", "AACACTATACT", "CCTACTAAT",
				"CCACCTAA", "CCACCTAAT", "CCACCTAATA", "CCACCTAATAT", "AATAATAC", "AATAATACT", "AATAATACTA", "AATAATACTAT",
				"CAACCAT", "CAACCATA", "CAACCATAA", "CAACCATAAT", "CAACCATAATA", "CCACAAT", "AATATAAT", "AACCAACCT", 
				"AACCAACCTA", "CAACAAT", "CAACAATA", "ACAACAT", "CCACTAATA", "CCACTAATAC", "CCACTAATACT", "CCAACACC",
				"CCAACACCA", "CCAACACCAT", "AACCACT", "AACCACTA", "AACCACTAA", "AACCACTAAT", "CTAACCA", "CTAACCAT",
				"CTAACCATA", "CTAACCATAC", "CTAACCATACT", "CAACCAA", "CACTAAT", "AACCTAAC", "AACCTAACA", "CACTACC",
				"AATACTAC", "CCACATA", "AACACCAT", "CCTAATAA", "CCTAATAAT", "CCTAACCA", "CCTAACCAA", "CCTAACCAAC",
				"CCTAACCAACC", "CCTAACCAACCT", "CCTATAC", "CCTATACA", "CCTATACAT", "CCTATACATA", "CCTATACATAC", 
				"CCTATACATACT", "CCTATACATACTA", "CCTATACATACTAA", "CCTATACATACTAAT", "AATACA", "AATACAC", "AATACACA",
				"AATACACAC", "AATACACACA", "AATACACACAC", "AATACACACACC", "AATACACACACCA", "AATACACACACCAT",
				"AATACACACACCATA", "AATACACACACCATAT", "CCTACTACT", "CCACTATA", "CCACTATAA", "CCACTATAAT",
				"CCACTATAATA", "CCACTATAATAT", "AATAACCATA", "AATAACCATAC", "AATAACCATACA", "AATAACCATACAA",
				"CTAACAACC", "CTAACAACCT", "CACAAT", "CACAATA", "CTATACTA", "CTATACTAT", "CAATA", "CAATAC",
				"CAATACC", "CCAACACAT", "CCTACTAATA", "CCTACTAATAA", "CCTACTAATAAC", "CCTACTAATAACT", "AATAACCATACC",
				"AATAACCATACCT", "AATAACCATACCTA", "AATAACCATACCTAC", "AATAACCATACCTACT", "ATAACC", "CCATAAC", "CCATAACT",
				"ATACTAC", "ATACTACC", "CTAACCTAT", "CATACTAC", "CATACTACT", "CCATAACTA", "CCATAACTAT", "CCATAACTATA", 
				"CCATAACTATAC", "CCATAACTATACA", "CCATAACTATACAA", "CCATAACTATACAAT", "CCTATAA", "CCTATAAT", "AACATATA",
				"AACATATAA", "AACCAACAT", "AACCAACATA", "AACCAACATAA", "AACCAACATAAC", "AACCAACATAACC", "AACCAACATAACCT",
				"CCATAACA", "CCATACCT", "AACAACCAACAT", "AATAACAC", "AATAACACT", "AACACAAT", "AACACAATA", "AACACAATAT", 
				"AACACAATATA", "AACACAATATAT", "ACCAAT", "AACACCAAT", "CCATACA", "CCATACAC", "CCATACACT", "CCATACACTA",
				"CCATACACTAC", "CCATACACTACA", "CCATACACTACAC", "CCATACACTACACA", "CCATACACTACACAT", "CCTACAT", "CATAATA",
				"CATAATAT", "ACACTAACAT", "ACAACAAT", "CCACATAA", "CCACATAAC", "CCACATAACA", "CCACATAACAC", "CCACATAACACC",
				"CCACATAACACCA", "CCACATAACACCAT", "CCACATAACACCATA", "CCACATAACACCATAC", "CCACATAACACCATACC", "CAATAT",
				"CATACC", "AACTATAC", "AACTATACC", "AACTATACCT", "CACAATAC", "CACAATACT", "CCAACCAT", "CCAACCATA", 
				"CCAACCATAA", "CCAACCATAAT", "CCAACCATAATA", "CCAACCATAATAA", "CCAACCATAATAAC", "CCAACCATAATAACT", 
				"AACACAT", "AACACATA", "ACTAATAC", "ACTAATACC", "ACTAATACCA", "ACTAATACCAA", "AACAATAC", "AACAATACC",
				"AACAATACCT", "AACAATACCTA", "AACAATACCTAA", "AACAATACCTAAT", "CTACCTAT", "CAATAA", "CAATAAT", "AATATAT",
				"AATATATA", "AATATATAA", "AATATATAAT"};
		
		System.out.println("========= X79547 ==========\t" + longSequence_5.length + "\tS5\t" + s5.length());
		
		String[] Test1 = {"ACB", "BC", "AA", "AB"};
		String[] Test2 = {"ACB", "BC"};
		
		String a = "ACBCAAAB";
		String b = "ACBCACBC";
		
		//AverageCommonSubstring av = new AverageCommonSubstring();
		AverageCommonSubstring av = new AverageCommonSubstring();
		
		//System.out.println( s1.length()+"\t"+ s2.length() + "\t" + s3.length());
		System.out.println("VALUE =\t" + av.findValue(s5, s4, longSequence_5,  longSequence_4, s5.length(), s4.length()));
		//System.out.println("VALUE =\t" + av.findValue(a,b, Test1, Test2,a.length(), b.length()) );
	}

}
